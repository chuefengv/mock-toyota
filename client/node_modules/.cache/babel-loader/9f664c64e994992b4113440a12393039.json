{"ast":null,"code":"var _jsxFileName = \"/Users/feng/Desktop/mock-toyota/client/src/components/hero/slider/Slider.jsx\";\nimport React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport Carousel, { Props } from '../src/components/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createCarouselItemImage = (index, options = {}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    src: `/assets/${index}.jpeg`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"legend\",\n    children: [\"Legend \", index]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this)]\n}, index, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\nconst baseChildren = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [1, 2, 3, 4, 5].map(createCarouselItemImage)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 22\n}, this);\n\nexport const withExternalControls = () => {\n  class ExternalControlledCarousel extends Component {\n    constructor(props) {\n      super(props);\n\n      this.next = () => {\n        this.setState(state => ({\n          currentSlide: state.currentSlide + 1\n        }));\n      };\n\n      this.prev = () => {\n        this.setState(state => ({\n          currentSlide: state.currentSlide - 1\n        }));\n      };\n\n      this.changeAutoPlay = () => {\n        this.setState(state => ({\n          autoPlay: !state.autoPlay\n        }));\n      };\n\n      this.updateCurrentSlide = index => {\n        const {\n          currentSlide\n        } = this.state;\n\n        if (currentSlide !== index) {\n          this.setState({\n            currentSlide: index\n          });\n        }\n      };\n\n      this.state = {\n        currentSlide: 0,\n        autoPlay: true\n      };\n    }\n\n    render() {\n      const buttonStyle = {\n        fontSize: 20,\n        padding: '5px 20px',\n        margin: '5px 0px'\n      };\n      const containerStyle = {\n        margin: '5px 0 20px'\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: containerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: containerStyle,\n            children: [\"Use the buttons below to change the selected item in the carousel\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Note that the external controls might not respect the carousel boundaries but the carousel won't go past it.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"External slide value: \", this.state.currentSlide]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.prev,\n            style: buttonStyle,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.next,\n            style: buttonStyle,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.changeAutoPlay,\n            style: buttonStyle,\n            children: [\"Toggle Autoplay (\", this.state.autoPlay ? 'true' : 'false', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n          autoPlay: this.state.autoPlay,\n          selectedItem: this.state.currentSlide,\n          onChange: this.updateCurrentSlide,\n          ...this.props,\n          children: baseChildren.props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(ExternalControlledCarousel, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 12\n  }, this);\n};","map":{"version":3,"sources":["/Users/feng/Desktop/mock-toyota/client/src/components/hero/slider/Slider.jsx"],"names":["React","Component","ReactPlayer","Carousel","Props","createCarouselItemImage","index","options","baseChildren","map","withExternalControls","ExternalControlledCarousel","constructor","props","next","setState","state","currentSlide","prev","changeAutoPlay","autoPlay","updateCurrentSlide","render","buttonStyle","fontSize","padding","margin","containerStyle","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport Carousel, { Props } from '../src/components/Carousel';\n\nconst createCarouselItemImage = (index, options = {}) => (\n    <div key={index}>\n        <img src={`/assets/${index}.jpeg`} />\n        <p className=\"legend\">Legend {index}</p>\n    </div>\n);\n\nconst baseChildren = <div>{[1, 2, 3, 4, 5].map(createCarouselItemImage)}</div>;\n\nexport const withExternalControls = () => {\n    class ExternalControlledCarousel extends Component<{}, { currentSlide: number; autoPlay: boolean }> {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                currentSlide: 0,\n                autoPlay: true,\n            };\n        }\n\n        next = () => {\n            this.setState((state) => ({\n                currentSlide: state.currentSlide + 1,\n            }));\n        };\n\n        prev = () => {\n            this.setState((state) => ({\n                currentSlide: state.currentSlide - 1,\n            }));\n        };\n\n        changeAutoPlay = () => {\n            this.setState((state) => ({\n                autoPlay: !state.autoPlay,\n            }));\n        };\n\n        updateCurrentSlide = (index) => {\n            const { currentSlide } = this.state;\n\n            if (currentSlide !== index) {\n                this.setState({\n                    currentSlide: index,\n                });\n            }\n        };\n\n        render() {\n            const buttonStyle = { fontSize: 20, padding: '5px 20px', margin: '5px 0px' };\n            const containerStyle = { margin: '5px 0 20px' };\n            return (\n                <div>\n                    <div style={containerStyle}>\n                        <p style={containerStyle}>\n                            Use the buttons below to change the selected item in the carousel\n                            <br />\n                            <small>\n                                <i>\n                                    Note that the external controls might not respect the carousel boundaries but the\n                                    carousel won't go past it.\n                                </i>\n                            </small>\n                        </p>\n                        <p>External slide value: {this.state.currentSlide}</p>\n                        <button onClick={this.prev} style={buttonStyle}>\n                            Prev\n                        </button>\n                        <button onClick={this.next} style={buttonStyle}>\n                            Next\n                        </button>\n                        <button onClick={this.changeAutoPlay} style={buttonStyle}>\n                            Toggle Autoplay ({this.state.autoPlay ? 'true' : 'false'})\n                        </button>\n                    </div>\n                    <Carousel\n                        autoPlay={this.state.autoPlay}\n                        selectedItem={this.state.currentSlide}\n                        onChange={this.updateCurrentSlide}\n                        {...this.props}\n                    >\n                        {baseChildren.props.children}\n                    </Carousel>\n                </div>\n            );\n        }\n    }\n\n    return <ExternalControlledCarousel />;\n};"]},"metadata":{},"sourceType":"module"}